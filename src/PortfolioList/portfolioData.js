

export const portfolio = [
  {
    title: "This site",
    id: "personalSite",
    summary: "This site is the second iteration of my personal website. It's quite an upgrade from the old site, and is one of the most complex frontend applications I've developed to date. In addition to this portfolio it contains a library of frontend projects, a blog that turns my Notion pages into posts, and a Dashboard with realtiome metric information. I plan to update the blog and project sections weekly so be sure to bookmark and check back!",
    frontend: [
      "React Frontend",
      "Features my own content management system based on the Notion SDK",
      "React-Router-Dom keeps the URL relevant and handles navigation around the app",
      "Developed the Metric component that forms one part of my fullstack metrics system",
      "Implemented a custom local storage hook to stash and retrieve a token",
      "The Dashboard contains up-to-date metrics on visitor behavior, and pie chart drawn with HTML canvas",
      "Bootstrap 5.2 provides the styling and layout of the site",
      "Due to minimal blog content at launch, some search features of the blog are disabled. Expect to see more added over the next couple months",
    ],
    backend: [
      "Node-Express Backend",
      "Integrated Notion SDK to publish blogs from my dekstop Notion app to this site",
      "Wrote an OOP class to parse Notion Page Objects before uploading to db",
      "Integrated Twitter API to embed my programming related tweets",
      "Developed my own fullstack system for measuring site metrics",
      "Implemented auth endpoint to provide tokens for counting unique visitors",
      "By using a local token, I can track user path and page visits",
    ],
    database: [
      "Databases: AWS S3, MongoDB",
      "All files stored in in AWS S3 bucket",
      "MongoDB allows for rapid storage and retrieval for metric data and blog posts",
      "Upcoming: as I add more content I'll also develop better search capabilities for the blog",
    ],
    img: "https://s3.us-west-1.amazonaws.com/pix.ly/site-shot.png"
  },
  {
    title: "Jobly",
    id: "jobly",
    summary: "Jobly is a fullstack job-board web app featuring a ReactJS frontend, NodeJS REST API backend, and PostgreSQL database containing mock data. It is deployed on Heroku and Surge. I built Jobly over the course of two, weeklong sprints while attending Rithm School bootcamp in San Francisco.",
    frontend: [
      "React Frontend",
      "Client side routing with React-Router-Dom",
      "Route authentication and authorization using JSON web tokens",
      "An object oriented API helper class to interface with the backend",
      "Carefully planned component heirarchy and state management",
      "A user system with full login, signup, update, and role functionality",
      "Custom hook for storing and retrieving from local storage",
      "Currently in the process of converting the app to TypeScript",
    ],
    backend: [
      "Node-Express REST API backend",
      "Takes values from query string or from JSON body and returns JSON",
      "Middleware authenticates and authorizes each route using JWTs",
      "Extensively tested with Jest unit and integration tests",
      "Lightweight form validation using JSON Schema",
      "Object oriented models for Companies, Users, and Jobs",
      "Hashing with bcrypt ensures passwords are never stored in plain text",
      "Global 404 and generic error handler ensure predictable behavior"
    ],
    database: [
      "PostgreSQL Database",
      "Interfaced with db via PG, a lightweight Postgres driver for Node",
      "Database consists of tables for Company, User, and Job",
      "Developed Job table as a through-table for many-to-many relationship between Company and User",
      "OOP methods dynamically build SQL queries based on search parameters",
      "Implemented parameterized queries to prevent against SQL injection",
    ],
    img: "https://s3.us-west-1.amazonaws.com/pix.ly/jobly.png",
    link: "https://jobly-r25.surge.sh/",
  },
  {
    title: "Warbler",
    id: "warbler",
    summary: "Warbler is a fullstack Twitter clone built on Python-Flask. It is the result of a weeklong sprint to extend an existing, semi-functional app. During this project I worked to uncover bugs, write tests, and extend the app with new features.",
    frontend: [
      "Flask-Jinja Frontend",
      "Server-side-rendered pages using the Jinja II templating engine:",
      "Abstracted repeated code to templates for headers, footers, cards, and more",
      "Used Jinja syntax to implement dynamic behavior and logic inside templates",
      "Designed and implemented a “like” button with dynamic UI that sends an AJAX post request",
      "Utilized the library WTForms to build and validate forms for Messages and User SignUp/Login/Edit",
      "Used WTForms to protect against CSRF attacks and to validate form inputs",
    ],
    backend: [
      "Flask-Python Backend",
      "Implemented user authentication and authorization using the Flask Session object",
      "Followed a Test Driven Development methodology using Python's unittest library",
      "Developed methods to query database and provide metrics for likes, follows, followers",
      "Placed current user in Flask's global object to conveniently check user's admin/login status",
      "Utilized the python-debugger (pdb) to check for exisiting bugs, and troubleshoot the application",
      "Used the ORM SQLALchemy to define object oriented models that interface with the database",
    ],
    database: [
      "PostgreSQL Database with ORM",
      "Seeded a database using data from CSV files and a Python script",
      "Database consists of tables for Follows, Likes, Users, and Messages",
      "Implemented Follows through-table as many-to-many relationship between Users",
      "Implemented Likes through-table as many-to-many relationship between Users and Messages",
      "Stored passwords as bcrypt hashes. Referenced hash during login to avoid hold plain text passwords",
    ],
    img: "https://s3.us-west-1.amazonaws.com/pix.ly/warbler.png",
    link: "https://r-warble.herokuapp.com/",
  },
];
